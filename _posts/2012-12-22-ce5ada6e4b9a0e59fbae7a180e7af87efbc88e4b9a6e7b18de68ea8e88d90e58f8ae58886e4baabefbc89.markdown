---
author: me115wp
comments: true
date: 2012-12-22 02:17:48+00:00
layout: post
link: http://blog.me115.com/2012/12/214
slug: c%e5%ad%a6%e4%b9%a0%e5%9f%ba%e7%a1%80%e7%af%87%ef%bc%88%e4%b9%a6%e7%b1%8d%e6%8e%a8%e8%8d%90%e5%8f%8a%e5%88%86%e4%ba%ab%ef%bc%89
title: C++学习–基础篇（书籍推荐及分享）
wordpress_id: 214
categories:
- C++编程
- CC书评
---




算起来，用C++已经有七八年时间，也有点可以分享的东西；




以下推荐的书籍大多有电子版。对于技术类书籍，电子版并不会带来一个好的阅读体验。如果喜欢，最好找纸版（图书馆是个好去处）；电子版更适合作为一个参考书籍常备电脑。







我将分为基础篇、Windows篇、和Linux/Unix篇 三个部分来介绍这些经典书籍：




**

**





## C++入门


《[C++ Primer](http://www.amazon.cn/C-Primer%E4%B8%AD%E6%96%87%E7%89%88-%E6%9D%8E%E6%99%AE%E6%9B%BC/dp/B00114DX08?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B00114DX08)》

我的C++入门读物是《[C++大学教程](http://www.amazon.cn/C-%E5%A4%A7%E5%AD%A6%E6%95%99%E7%A8%8B-%E6%88%B4%E7%89%B9%E5%B0%94/dp/B004J54TN6?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B004J54TN6)》，这本书800多页，由于学习时间长，一个学期学这么一本书，时间上的富裕，让我有充分的时间来吸收。书中80%的代码我都敲到PC上运行过；后来再看《C++


primer》的时候，也就一个星期的功夫翻完了。都是入门读物，介绍的也都全面。刚接触C++的朋友，至少应该将这方面的书好好过一遍。







## **语言技巧，性能优化**







《[Effective C++](http://www.amazon.cn/Effective-C-%E4%B8%AD%E6%96%87%E7%89%88-Scott-Meyers/dp/B001130D9I?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B001130D9I)》




《[C++必知必会](http://www.amazon.cn/C-%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A-%E6%9D%9C%E8%B5%AB%E6%96%AF%E7%89%B9/dp/B004CF9QZ4?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B004CF9QZ4)》




《[More Effective C++](http://www.amazon.cn/More-Effective-C-%E8%BF%88%E8%80%B6%E6%96%AF/dp/B001166KM4?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B001166KM4)》







有了语言基础之后，接着就是细节上的深入，进一步领会C++的精髓。《[Effective C++](http://www.amazon.cn/Effective-C-%E4%B8%AD%E6%96%87%E7%89%88-Scott-Meyers/dp/B001130D9I?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B001130D9I)》可以看作是一本C++ 疑难解惑手册；
对于C++语言层次深入一点的东西，容易出错的知识点，在这边书上可找到满意解答；适合多次品味。




《[C++必知必会](http://www.amazon.cn/C-%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A-%E6%9D%9C%E8%B5%AB%E6%96%AF%E7%89%B9/dp/B004CF9QZ4?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B004CF9QZ4)》《[More Effective C++](http://www.amazon.cn/More-Effective-C-%E8%BF%88%E8%80%B6%E6%96%AF/dp/B001166KM4?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B001166KM4)》则作为对Effective C++
没有讲完的补充，可看作前者看完后意犹未尽时使用；




顺便说下，这三本书都不厚，小册子，每本也就几天的功夫就可以搞定；







## **底层硬货**







《[C专家编程](http://www.amazon.cn/C%E5%92%8CC-%E7%BB%8F%E5%85%B8%E8%91%97%E4%BD%9C%E2%80%A2C%E4%B8%93%E5%AE%B6%E7%BC%96%E7%A8%8BExpert-C-Programming-Deep-C-Secrets-Peter-Van-Der-Linden/dp/B0012NIW9K?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B0012NIW9K)》




《[C和指针](http://www.amazon.cn/C%E5%92%8C%E6%8C%87%E9%92%88-POINTERS-ON-C-Kenneth-A-Reek/dp/B00163LU68?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B00163LU68)》







C++源于C，对于指针、对于各种地址的偏移计算，对于大端小端的深刻剖析，还得靠一些硬通货来解析；这两本书虽说不厚，但读起来确实费劲，信息量很足，很多都是在平时C++使用中没有意识到的知识点，却又都是重要的点。让人有知其所以然的快感；




涉及到底层的东西，都是用来验证编程功底是否扎实。要想彻底掌握C++底层的东西，还是得看看专家编程，很好的两本书，指针等讲的很透彻。







## **STL**







《[C++标准程序库](http://www.amazon.cn/C-%E6%A0%87%E5%87%86%E7%A8%8B%E5%BA%8F%E5%BA%93-%E8%87%AA%E4%BF%AE%E6%95%99%E7%A8%8B%E4%B8%8E%E5%8F%82%E8%80%83%E6%89%8B%E5%86%8C-Nicolai-M-Josuttis/dp/B0011BDOM8?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B0011BDOM8)》




《[泛型编程与STL](http://www.me115.com/book/118.html)》




《[STL源码剖析](http://www.amazon.cn/STL%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90-%E4%BE%AF%E6%8D%B7/dp/B00116JFS0?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B00116JFS0)》







《[C++标准程序库](http://www.amazon.cn/C-%E6%A0%87%E5%87%86%E7%A8%8B%E5%BA%8F%E5%BA%93-%E8%87%AA%E4%BF%AE%E6%95%99%E7%A8%8B%E4%B8%8E%E5%8F%82%E8%80%83%E6%89%8B%E5%86%8C-Nicolai-M-Josuttis/dp/B0011BDOM8?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B0011BDOM8)》是属于百科全书类型，讲解基础，但语言平淡（是以参考手册的角度来写的），没有勇气将其全部翻完，捡感兴趣的和自己很缺乏的部分看了看（里面关于智能指针方面的论述，还不错）；




《[泛型编程与STL](http://www.me115.com/book/118.html)》里面对萃取机制及各泛型的概念论述非常透彻，前6章为主要篇章，不可跳过。后面的可在实践中编码练习或查找。
后面章节可在看完之后做为手册使用，对STL中的常用算法和容器进行了归类讲解，并给出了相当数量的示例。




《[STL源码剖析](http://www.amazon.cn/STL%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90-%E4%BE%AF%E6%8D%B7/dp/B00116JFS0?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B00116JFS0)》每一个推荐深入STL的文章应该都少不了这本书。下面几个问题可以考查一下是否需要看看：
1.STL中DQueue的实现机制（数据结构式如何组织的，其迭代器的插入和删除过程中的实现） 2.是否熟悉红黑树，能否叙述其插入和删除过程，如何调整。
3.萃取器的几种实现







## **Boost**







《[超越c标准库——boost程序库导论](http://www.amazon.cn/%E8%B6%85%E8%B6%8AC-%E6%A0%87%E5%87%86%E5%BA%93-Boost%E5%BA%93%E5%AF%BC%E8%AE%BA-Bjorn-Ka/dp/B00A5DEJZ4?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B00A5DEJZ4)》







当标准库无法再满足你的时候，就轮到Boost出场了。编程，讲究两个效率，一是开发效率，二是运行效率。与其它编译型语言相比（java、C#等），C++属于后者，运行效率不错，但开发效率着实低。除了C++更底层的原因外，另一方面的原因就是标准库提供的功能不足。没有太多的工具，想实现什么都得自己来一遍，重复的造轮子的工作在程序员中不断上演；




Boost库是对C++标准库的扩展，让我们在开发的过程中有更多的工具可以选择。正则表达式、智能指针等工具都是非常有用的工具，而函数对象，Lambda则让我们在编写C++的代码中更为优雅；




这里提供的一本书是Boost的入门经典。它的目的就是让你对boost产生兴趣。等有了兴趣之后，就直接上boost的官网吧，需要什么尽管拿。













## **设计模式**







《[设计模式](http://www.amazon.cn/%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%A8%8B%E6%9D%B0/dp/B0011FHN5S?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B0011FHN5S)》




《[设计模式精解](http://www.me115.com/book/121.html)》




《[道法自然](http://www.amazon.cn/%E9%81%93%E6%B3%95%E8%87%AA%E7%84%B6-%E6%9D%9C%E5%A4%A7%E5%AE%87/dp/B0064X1X6M?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B0064X1X6M)》




《[设计模式](http://www.amazon.cn/%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%A8%8B%E6%9D%B0/dp/B0011FHN5S?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B0011FHN5S)》是该领域的圣经，未全看完。虽说经典，但一页一页的翻完，还真要点耐性。不像老外写书的风格，这本书看的很累（这也是一本参考手册）。我认为在对大部分模式都有一定的了解后再来看这本书，会找到很多兴趣点。




《[设计模式精解](http://www.me115.com/book/121.html)》我的设计模式之路是从这本书入门的，通过几个实例来解释模式的用法，以及为什么要用模式（这个可能更重要），不过全书也就讲了10来个模式，意犹未尽。对设计模式感兴趣、初学者推荐；







《[道法自然](http://www.amazon.cn/%E9%81%93%E6%B3%95%E8%87%AA%E7%84%B6-%E6%9D%9C%E5%A4%A7%E5%AE%87/dp/B0064X1X6M?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B0064X1X6M)》是国人写的很不错的一本书，用他们自己写的一个框架系统作为实例，贯穿全文，讲解各种模式的用法。看过后，体会到模式在大项目，特别是这种框架系统中的应用真是太到位了。同时，熟悉MFC的朋友会在本书中收获更多的东西，MFC也是一个框架系统，通过本书的讲解，可以体会到MFC的内部设计以及为何如此设计（书中就专门讲到MFC中的设计思想），同时，在讲单件模式的时候，还带出了MFC中theApp的作用（为什么要在MFC中安排一个theApp全局变量？这是我看到的唯一一本书解释了这个问题的）；







## 算法篇







《[编程珠玑](http://www.amazon.cn/%E7%BC%96%E7%A8%8B%E7%8F%A0%E7%8E%91-Jon-Bentley/dp/B001GNBZFE?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B001GNBZFE)》




讲解数据结构和算法技巧的压轴好书。







基础篇就谈这些，后续将讨论C++的应用，Windows篇和Linux/Unix篇；



