---
author: me115wp
comments: true
date: 2014-06-30 02:30:16+00:00
layout: post
link: http://blog.me115.com/2014/06/672
slug: nosql%e6%95%b0%e6%8d%ae%e5%ba%93%ef%bc%9a%e6%95%b0%e6%8d%ae%e7%9a%84%e4%b8%80%e8%87%b4%e6%80%a7-2
title: NoSQL数据库：数据的一致性
wordpress_id: 672
categories:
- Redis
tags:
- NOSQL
---

# NoSQL数据库：数据的一致性





## 读取一致性





  
  *     

强一致性          
在任何时间访问集群中任一结点，得到的数据结果一致；

  
   
  *     

用户一致性          
对同一用户，访问集群期间得到的数据一致；           
解决用户一致性：使用粘性会话，将会话绑定到特定结点来处理；           
这样会降低负载均衡器的性能；

  
   
  *     

最终一致性          
集群中各结点间由于数据同步不及时造成暂时的数据不一致，但数据同步完成后，最终具有一致性；

  




## 更新一致性





  
  * 悲观方式      
    
    <code>使用写锁
    大幅降低系统响应能力
    可能导致死锁</code>


  


  
  * 乐观方式 
    
    
    <code>先让冲突发生，再检测顺序
    自动合并的处理方式极具“领域特定”问题</code>


  





## 放宽“一致性约束”






  
  * CAP定理 
      
一致性（Consistency）、可用性（Availability）和分区耐受性（Partition tolerance），3个属性只可能同时满足2个； 





分区耐受性的解释：集群因通信故障而划分为多个时仍然可用






  
  * CA系统 
    
    
    <code>  单服务器
      集群中出现”分区“，就不可用</code>


  


  
  * PA/PC 
    
    
    <code>  集群出现”分区“时，需要在”一致性“ 和“可用性”间权衡
      一般会牺牲部分一致性（eg：使用最终一致性），保证可用性</code>


  





## 放宽“持久性”约束





更严格的持久性，意味着更多的性能损失；






  
  * 牺牲“持久性”换取更好的性能 


  
  * 复制“持久性”故障 
    
    
    <code>  主节点故障，未同步到从节点的数据丢失
      主节点恢复，故障期间更新的数据冲突
      解决方案：针对单个请求指定其所需的持久性</code>


  





## 附思维导图





[![NoSQL：数据的一致性](http://blog.me115.com/wp-content/uploads/2014/06/NoSQL_thumb4.png)](http://blog.me115.com/wp-content/uploads/2014/06/NoSQL4.png)





## 参考





[《NoSQL精粹》](http://www.amazon.cn/NoSQL%E7%B2%BE%E7%B2%B9-%E5%A1%9E%E5%BE%97%E6%8B%89%E5%90%89/dp/B00EEQ2GPS?SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&tag=z08-23&linkCode=xm2&camp=2025&creative=165953&creativeASIN=B00EEQ2GPS)





Posted by: 大CC | 30JUN,2014 
    
博客：[blog.me115.com](http://blog.me115.com) [[订阅](http://feed.feedsky.com/me115)] 

    
微博：[新浪微博](http://weibo.com/bigcc115)



